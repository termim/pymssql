name: Build Wheels

on:
  push:
    branches:
        - '**'
    paths-ignore:
        - docs/**
        - ChangeLog*
        - .github/workflows/test_macos.yml
        - .github/workflows/test_linux.yml
        - .github/workflows/test_linux_aarch64.yml
        - .github/workflows/test_windows.yml
        - dev/build_manylinux_wheels.sh
    tags:
        - 'v[0-9]+.[0-9]+.[0-9]+'
        - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
  pull_request:
    branches:
        - '**'
    paths-ignore:
        - docs/**
        - ChangeLog*
        - .github/workflows/test_macos.yml
        - .github/workflows/test_linux.yml
        - .github/workflows/test_linux_aarch64.yml
        - .github/workflows/test_windows.yml
        - dev/build_manylinux_wheels.sh

  workflow_dispatch:

jobs:

  build_sdist:

    name: SDist
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Build sdist
        run: |
            python -m pip install build
            python -m build --sdist --outdir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: pymssql-sdist-${{ github.sha }}
          path: wheelhouse

  build_wheels:

    name: ${{ matrix.os }} Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-24.04, ubuntu-24.04-arm, macos-13, macos-14]
        #python-version: ['39', '310', '311', '312', '313']
        os: [ubuntu-24.04]
        python-version: ['312', '313']

    services:
      SQLServer:
        image: mcr.microsoft.com/mssql/server:2017-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: sqlServerPassw0rd
        ports:
          - 1433:1433

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: aarch64

      - name: Build wheels
        env:
          CIBW_ARCHS_LINUX: ${{ runner.arch == 'X64' && 'auto' || 'auto' }}
          CIBW_BUILD: cp${{matrix.python-version}}-*

        run: |
            python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{matrix.python-version}}
          path: wheelhouse

  build_wheels_2:

    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04-arm, macos-13, macos-14]
        arch: [auto]

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        if: ${{ matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: wheelhouse

  upload-wheels:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/upload-artifact/merge@v4
        with:
          name: wheels
          #pattern: wheels-*
          separate-directories: false
          delete-merged: false
