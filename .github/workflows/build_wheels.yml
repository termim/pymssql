name: Build Wheels

on:
  push:
    branches:
        - '**'
    paths-ignore:
        - docs/**
        - ChangeLog*
        - .github/workflows/test_macos.yml
        - .github/workflows/test_linux.yml
        - .github/workflows/test_linux_aarch64.yml
        - .github/workflows/test_windows.yml
        - dev/build_manylinux_wheels.sh
    tags:
        - 'v[0-9]+.[0-9]+.[0-9]+'
        - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
  pull_request:
    branches:
        - '**'
    paths-ignore:
        - docs/**
        - ChangeLog*
        - .github/workflows/test_macos.yml
        - .github/workflows/test_linux.yml
        - .github/workflows/test_linux_aarch64.yml
        - .github/workflows/test_windows.yml
        - dev/build_manylinux_wheels.sh

  workflow_dispatch:

jobs:

  build_sdist:

    name: SDist
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Build sdist
        run: |
            python -m pip install build
            python -m build --sdist --outdir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: pymssql-sdist-${{ github.sha }}
          path: wheelhouse

  build-wheels-matrix:
    runs-on: ubuntu-latest
    outputs:
      include: ${{ steps.set-matrix.outputs.include }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - run: pip install cibuildwheel==3.0.0
      - id: set-matrix
        run: |
          MATRIX_INCLUDE=$(
            {
              cibuildwheel --print-build-identifiers --platform linux --archs x86_64 | grep cp |  jq -nRc '{"only": inputs, "os": "ubuntu-latest"}'
            } | jq -sc
          )
          echo "include=$MATRIX_INCLUDE" >> $GITHUB_OUTPUT

  build_wheels:

    needs: build-wheels-matrix
    name: ${{ matrix.only }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.build-wheels-matrix.outputs.include) }}

    services:
      SQLServer:
        image: mcr.microsoft.com/mssql/server:2017-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: sqlServerPassw0rd
        ports:
          - 1433:1433

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pypa/cibuildwheel@v3.0.0  # v2.21.3
        with:
          only: ${{ matrix.only }}
        #env:
          #CIBW_BUILD_VERBOSITY: 1

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.only }}
          path: wheelhouse

  build_wheels_2:

    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04-arm, macos-13, macos-14]
        arch: [auto]

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        if: ${{ matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: wheelhouse

  build_wheels_windows:

    name: ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        arch: [AMD64, x86]

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install OpenSSL x86
        if: matrix.arch == 'x86'
        run: choco install openssl --forcex86 --version=1.1.1.2100

      - name: Install OpenSSL AMD64
        if: matrix.arch == 'AMD64'
        run: choco install openssl --version=3.1.1

      - name: Install gperf
        run: choco install gperf

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0
        env:
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: wheelhouse

  upload-wheels:
    needs: [build_wheels, build_wheels_2, build_wheels_windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/upload-artifact/merge@v4
        with:
          name: wheels
          #pattern: wheels-*
          separate-directories: false
          delete-merged: false
