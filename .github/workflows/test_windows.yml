name: Windows

on:
  push:
    branches:
        - '**'
    paths-ignore:
        - docs/**
        - ChangeLog*
    tags:
        - 'v[0-9]+.[0-9]+.[0-9]+'
        - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
  pull_request:
    branches:
        - '**'
    paths-ignore:
        - docs/**
        - ChangeLog*

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
            python-version: [3.8]#[2, 3.5, 3.6, 3.7, 3.8]
            os: [windows-latest]
            #architecture: [x86, x64]

    steps:

    - uses: actions/checkout@v2

    - name: test
      env:
        DOCKER_IMAGE: mcr.microsoft.com/mssql/server:2017-latest
        DNAME: ${{ github.sha }}_mcrmicrosoftcommssqlserver2017latest
        SA_PASSWORD: sqlServerPassw0rd
      run: |
            docker pull microsoft/mssql-server-windows-express
            #mcr.microsoft.com/mssql/server:2017-latest
            docker create --name ${{ github.sha }}_mcrmicrosoftcommssqlserver2017latest --label 12345 --network="host" --network-alias SQLServer -p 1433:1433  -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=sqlServerPassw0rd" -e GITHUB_ACTIONS=true -e CI=true mcr.microsoft.com/mssql/server:2017-latest
            docker start ${{ github.sha }}_mcrmicrosoftcommssqlserver2017latest
            docker ps --all

    #- name: Insatll MSSQL Server
      #run: |
            #choco install mssqlserver2016expressadv
            #type C:\ProgramData\chocolatey\logs\chocolatey.log

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
            python-version: ${{ matrix.python-version }}

    - name: Install vcpython27
      if: matrix.python-version == 2
      run: choco install vcpython27 -f -y

    - name: Install dependencies
      run: choco install gperf

    - name: Build wheels
      run: python dev/build_windows_wheels.py

    - name: Test with pytest
      run: |
            python -m pip install pymssql --no-index -f dist
            python -m pip install -r requirements-dev.txt
            pytest

    - name: Stop MSSQLServer
      if: ${{ always() }}
      env:
        DNAME: ${{ github.sha }}_mcrmicrosoftcommssqlserver2017latest
      run: |
            docker rm ${{ github.sha }}_mcrmicrosoftcommssqlserver2017latest
#
    #- name: Archive wheels and sdist
      #uses: actions/upload-artifact@v2
      #with:
        #name: pymssql-${{ runner.os }}-${{ matrix.arch }}-${{ github.sha }}
        #path: dist
#
    #- name: Publish wheels
      #if: startsWith(github.ref, 'refs/tags/v')
      #run: |
        #pip install twine --upgrade
        ##twine upload --skip-existing -u __token__ -p ${{secrets.PYMSSQL_PYPI_TOKEN}} dist/*
        #twine upload --skip-existing -u __token__ -p ${{secrets.PYMSSQL_TEST_PYPI_TOKEN}} --repository-url=https://test.pypi.org/legacy/ dist/*
